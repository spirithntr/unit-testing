!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=a(n(1)),i=a(n(4));function a(e){return e&&e.__esModule?e:{default:e}}var s=document.querySelector(".person-list-container");new r.default(i.default,s,[10,15,20])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=s(n(2)),a=s(n(3));function s(e){return e&&e.__esModule?e:{default:e}}var o=function(){function e(t,n,r){var s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.view=new a.default(n),this.list=new i.default(t,this.view),this.list.updateData().then(function(e){s.list.personList=e,s.list.sort(),s.setRanges(r),s.list.update(),s.view.sortSelector.addEventListener("change",function(e){return s.sort(e)})}).catch(function(e){s.list.personList=[]})}return r(e,[{key:"update",value:function(){this.list.update()}},{key:"sort",value:function(e){switch(e.currentTarget.value){case"normal":this.list.sort();break;case"reverse":this.list.reverse()}this.list.update()}},{key:"setRanges",value:function(e){this.list.range=this.view.showRanges(e,this),this.list.page=this.view.showPages(this.calcPages(),this)}},{key:"setRangeEvent",value:function(e,t){this.list.range=e,this.view.setRangeActive(t.currentTarget),this.list.page=this.view.showPages(this.calcPages(),this),this.list.update()}},{key:"setPageEvent",value:function(e,t){this.list.page=e,this.view.setPageActive(t.currentTarget),this.list.update()}},{key:"calcPages",value:function(){var e=this.list.personList.length,t=this.list.range;return e%t?Math.floor(e/t)+1:e/t}}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.url=function(e){var t=e.proto+"://"+e.url;for(var n in e.params)t+=n+"="+e.params[n]+"&";return t.slice(0,t.length-1)}(t),this.view=n,this.personList=[]}return r(e,[{key:"sort",value:function(){this.personList.sort(function(e,t){var n=e.name.first+" "+e.name.last,r=t.name.first+" "+t.name.last;return n.localeCompare(r)})}},{key:"reverse",value:function(){this.personList.reverse()}},{key:"updateData",value:function(){var e=this;return new Promise(function(t,n){var r=new XMLHttpRequest;r.open("GET",e.url,!0),r.responseType="json",r.onreadystatechange=function(){4===r.readyState&&(200!==r.status?console.log(r.status+": "+r.statusText):t(r.response.results))},r.ontimeout=function(){console.log("Извините, запрос превысил максимальное время"),n("timeout")},r.onerror=function(e){console.log("Error: "+e),n(e)},r.send()})}},{key:"update",value:function(){var e=this.page*this.range,t=e+this.range;this.view.showList(this.personList.slice(e,t))}}]),e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();function i(e){return e.slice(0,1).toUpperCase()+e.slice(1)}function a(e){for(var t=e.children.length,n=0;n<t;n++)e.removeChild(e.firstElementChild)}function s(e,t,n,r){var i=document.createElement(t);for(var a in n)i.setAttribute(a,n[a]);return r&&(i.innerText=r),e.appendChild(i),i}var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.sortSelector=t.querySelector(".sorting"),this.viewList=t.querySelector(".view-list"),this.ranges=t.querySelector(".ranges"),this.pages=t.querySelector(".pages"),this.modalOverlay=t.querySelector(".modal-overlay"),this.modal=t.querySelector(".full-info")}return r(e,null,[{key:"CLICK",get:function(){return"click"}},{key:"ACTIVE",get:function(){return"active"}},{key:"HIDDEN",get:function(){return"hidden"}}]),r(e,[{key:"showList",value:function(t){var n=this;this.viewList.children.length>0&&a(this.viewList),t.forEach(function(t){var r=document.createElement("li"),a=document.createElement("img"),s=document.createElement("p");a.src=t.picture.thumbnail;var o=t.name,u=o.title,l=o.first,c=o.last;s.innerText=i(u)+". "+i(l)+" "+i(c),r.appendChild(a),r.appendChild(s),r.addEventListener(e.CLICK,function(e){return n.showFullInfo(t,e)}),n.viewList.appendChild(r)})}},{key:"showRanges",value:function(t,n){var r=this;return t.forEach(function(t,i){var a=document.createElement("li"),s=document.createElement("a");i||(s.classList.add(e.ACTIVE),r.activeRange=s),s.innerText=t,s.addEventListener(e.CLICK,function(e){return n.setRangeEvent(t,e)}),a.appendChild(s),r.ranges.appendChild(a)}),t[0]}},{key:"setRangeActive",value:function(t){this.activeRange.classList.remove(e.ACTIVE),this.activeRange=t,this.activeRange.classList.add(e.ACTIVE)}},{key:"showPages",value:function(t,n){var r=this;this.pages.children.length>0&&a(this.pages);for(var i=function(t){var i=document.createElement("li"),a=document.createElement("a");0===t&&(a.classList.add(e.ACTIVE),r.activePage=a),a.innerText=t+1,a.addEventListener(e.CLICK,function(e){return n.setPageEvent(t,e)}),i.appendChild(a),r.pages.appendChild(i)},s=0;s<t;s++)i(s);return 0}},{key:"setPageActive",value:function(t){this.activePage.classList.remove(e.ACTIVE),this.activePage=t,this.activePage.classList.add(e.ACTIVE)}},{key:"showFullInfo",value:function(t,n){var r=this.modalOverlay;r.classList.remove(e.HIDDEN),r.addEventListener(e.CLICK,function(){return r.classList.add(e.HIDDEN)});var o=this.modal;this.modal.children.length>0&&a(this.modal),o.classList.remove(e.HIDDEN),s(o,"img",{src:t.picture.large,alt:t.name.first+" "+t.name.last});var u=s(o,"div",{});s(u,"p",{},"Street: "+function(e){for(var t=e.split(" "),n="",r=0;r<t.length;r++)n+=" "+i(t[r]);return n}(t.location.street)),s(u,"p",{},"City: "+i(t.location.city)),s(u,"p",{},"State: "+i(t.location.state)),s(u,"p",{},"Email: "+t.email),s(u,"p",{},"Phone: "+t.phone)}}]),e}();t.default=o},function(e){e.exports={proto:"https",url:"randomuser.me/api/?",params:{results:"50",format:"json",nat:"us",gender:"",password:"",inc:"gender,name,location,email,phone,picture"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,